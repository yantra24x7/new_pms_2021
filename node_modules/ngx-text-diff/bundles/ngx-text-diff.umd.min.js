!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("diff-match-patch"),require("@angular/common"),require("@angular/forms"),require("@angular/core")):"function"==typeof define&&define.amd?define("ngx-text-diff",["exports","diff-match-patch","@angular/common","@angular/forms","@angular/core"],n):n(t["ngx-text-diff"]={},t.diffMatchPatch,t.ng.common,t.ng.forms,t.ng.core)}(this,function(t,p,n,e,r){"use strict";var h=function(t){return null==t||!(Object.keys(t)||t).length||0===(Object.keys(t)||t).length},o=function(){function t(){this.initParser()}return t.prototype.initParser=function(){this.diffParser=new p.diff_match_patch},t.prototype.getDiffsByLines=function(s,f){var d=this;return new Promise(function(t,n){var e=d.diffParser.diff_linesToChars_(s,f),r=e.chars1,o=e.chars2,i=e.lineArray,l=d.diffParser.diff_main(r,o,!0);d.diffParser.diff_charsToLines_(l,i);var a=d.formatOutput(l);a||n("Error"),t(a)})},t.prototype.formatOutput=function(t){var f=this,d=1,c=1;return t.reduce(function(n,t){n||(n=[]);var e=t[0],r=t[1],o=null,i=null,l=null,a=null,s=null;switch(e){case p.DIFF_EQUAL:r.split("\n").filter(function(t,n,e){return n!==e.length-1||!h(t)}).forEach(function(t){s={leftContent:l={lineNumber:d,lineContent:t,lineDiffs:[],prefix:""},rightContent:a={lineNumber:c,lineContent:t,lineDiffs:[],prefix:""},belongTo:"both",hasDiffs:!1,numDiffs:0},n.push(s),c+=1,d+=1});break;case p.DIFF_DELETE:r.split("\n").filter(function(t,n,e){return n!==e.length-1||!h(t)}).forEach(function(t){i=n.find(function(t){return!t.leftContent&&t.rightContent&&t.rightContent.lineNumber===d&&""!==t.rightContent.prefix}),l={lineNumber:d,lineContent:t,lineDiffs:[{content:t,isDiff:!0}],prefix:"-"},i?(i.leftContent=l,i.leftContent.lineDiffs=f.getDiffParts(i.leftContent.lineContent,i.rightContent.lineContent),i.rightContent.lineDiffs=f.getDiffParts(i.rightContent.lineContent,i.leftContent.lineContent),i.belongTo="both",i.numDiffs=f.countDiffs(i)):n.push({leftContent:l,rightContent:null,hasDiffs:!0,belongTo:"left",numDiffs:1}),d+=1});break;case p.DIFF_INSERT:r.split("\n").filter(function(t,n,e){return n!==e.length-1||!h(t)}).forEach(function(t){o=n.find(function(t){return t.leftContent&&!t.rightContent&&t.leftContent.lineNumber===c&&""!==t.leftContent.prefix}),a={lineNumber:c,lineContent:t,lineDiffs:[{content:t,isDiff:!0}],prefix:"+"},o?(o.rightContent=a,o.leftContent.lineDiffs=f.getDiffParts(o.leftContent.lineContent,o.rightContent.lineContent),o.rightContent.lineDiffs=f.getDiffParts(o.rightContent.lineContent,o.leftContent.lineContent),o.belongTo="both",o.numDiffs=f.countDiffs(o)):n.push({leftContent:null,rightContent:a,hasDiffs:!0,belongTo:"right",numDiffs:1}),c+=1})}return n},[])},t.prototype.countDiffs=function(t){var n=0;return t.leftContent&&(n+=t.leftContent.lineDiffs.filter(function(t){return t.isDiff}).length),t.leftContent&&(n+=t.rightContent.lineDiffs.filter(function(t){return t.isDiff}).length),n},t.prototype.getDiffParts=function(t,n){for(var e=[],r=0,o=0,i="",l="";r<t.length;)t[r]===n[o]&&o<n.length?(""!==l&&(e.push({content:l,isDiff:!0}),l=""),i+=t[r]):(""!==i&&(e.push({content:i,isDiff:!1}),i=""),l+=t[r]),r++,o++;return""!==l?e.push({content:l,isDiff:!0}):""!==i&&e.push({content:i,isDiff:!1}),e},t.decorators=[{type:r.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[]},t.ngInjectableDef=r.defineInjectable({factory:function(){return new t},token:t,providedIn:"root"}),t}();function i(r,o){var i,l,a,t,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return t={next:n(0),"throw":n(1),"return":n(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function n(n){return function(t){return function e(t){if(i)throw new TypeError("Generator is already executing.");for(;s;)try{if(i=1,l&&(a=2&t[0]?l["return"]:t[0]?l["throw"]||((a=l["return"])&&a.call(l),0):l.next)&&!(a=a.call(l,t[1])).done)return a;switch(l=0,a&&(t=[2&t[0],a.value]),t[0]){case 0:case 1:a=t;break;case 4:return s.label++,{value:t[1],done:!1};case 5:s.label++,l=t[1],t=[0];continue;case 7:t=s.ops.pop(),s.trys.pop();continue;default:if(!(a=0<(a=s.trys).length&&a[a.length-1])&&(6===t[0]||2===t[0])){s=0;continue}if(3===t[0]&&(!a||t[1]>a[0]&&t[1]<a[3])){s.label=t[1];break}if(6===t[0]&&s.label<a[1]){s.label=a[1],a=t;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(t);break}a[2]&&s.ops.pop(),s.trys.pop();continue}t=o.call(r,s)}catch(n){t=[6,n],l=0}finally{i=a=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([n,t])}}}var l=function(){function t(t,n){this.diff=t,this.cd=n,this._hideMatchingLines=!1,this.format="SideBySide",this.left="",this.right="",this.loading=!1,this.showToolbar=!0,this.showBtnToolbar=!0,this.compareResults=new r.EventEmitter,this.subscriptions=[],this.tableRows=[],this.filteredTableRows=[],this.tableRowsLineByLine=[],this.filteredTableRowsLineByLine=[],this.diffsCount=0,this.formatOptions=[{id:"side-by-side",name:"side-by-side",label:"Side by Side",value:"SideBySide",icon:"la-code"},{id:"line-by-line",name:"line-by-line",label:"Line by Line",value:"LineByLine",icon:"la-file-text"}]}return Object.defineProperty(t.prototype,"hideMatchingLines",{get:function(){return this._hideMatchingLines},set:function(t){this.hideMatchingLinesChanged(t)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){var n=this;this.loading=!0,this.diffContent&&this.subscriptions.push(this.diffContent.subscribe(function(t){n.loading=!0,n.left=t.leftContent,n.right=t.rightContent,n.renderDiffs().then(function(){n.cd.detectChanges(),n.loading=!1})["catch"](function(){return n.loading=!1})})),this.renderDiffs().then(function(){return n.loading=!1})["catch"](function(t){return n.loading=!1})},t.prototype.ngOnDestroy=function(){this.subscriptions&&this.subscriptions.forEach(function(t){return t.unsubscribe()})},t.prototype.hideMatchingLinesChanged=function(t){this._hideMatchingLines=t,this.hideMatchingLines?(this.filteredTableRows=this.tableRows.filter(function(t){return t.leftContent&&"-"===t.leftContent.prefix||t.rightContent&&"+"===t.rightContent.prefix}),this.filteredTableRowsLineByLine=this.tableRowsLineByLine.filter(function(t){return t.leftContent&&"-"===t.leftContent.prefix||t.rightContent&&"+"===t.rightContent.prefix})):(this.filteredTableRows=this.tableRows,this.filteredTableRowsLineByLine=this.tableRowsLineByLine)},t.prototype.setDiffTableFormat=function(t){this.format=t},t.prototype.renderDiffs=function(){return function t(n,l,a,s){return new(a||(a=Promise))(function(t,e){function r(t){try{i(s.next(t))}catch(n){e(n)}}function o(t){try{i(s["throw"](t))}catch(n){e(n)}}function i(n){n.done?t(n.value):new a(function(t){t(n.value)}).then(r,o)}i((s=s.apply(n,l||[])).next())})}(this,void 0,void 0,function(){var n;return i(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),this.diffsCount=0,[4,(n=this).diff.getDiffsByLines(this.left,this.right)];case 1:return n.tableRows=t.sent(),this.tableRowsLineByLine=this.tableRows.reduce(function(t,n){return t||(t=[]),n.hasDiffs?(n.leftContent&&t.push({leftContent:n.leftContent,rightContent:null,belongTo:n.belongTo,hasDiffs:!0,numDiffs:n.numDiffs}),n.rightContent&&t.push({leftContent:null,rightContent:n.rightContent,belongTo:n.belongTo,hasDiffs:!0,numDiffs:n.numDiffs})):t.push(n),t},[]),this.diffsCount=this.tableRows.filter(function(t){return t.hasDiffs}).length,this.filteredTableRows=this.tableRows,this.filteredTableRowsLineByLine=this.tableRowsLineByLine,this.emitCompareResultsEvent(),[3,3];case 2:throw t.sent();case 3:return[2]}})})},t.prototype.emitCompareResultsEvent=function(){var t={hasDiff:0<this.diffsCount,diffsCount:this.diffsCount,rowsWithDiff:this.tableRows.filter(function(t){return t.hasDiffs}).map(function(t){return{leftLineNumber:t.leftContent?t.leftContent.lineNumber:null,rightLineNumber:t.rightContent?t.rightContent.lineNumber:null,numDiffs:t.numDiffs}})};this.compareResults.next(t)},t.prototype.trackTableRows=function(t,n){return n&&n.leftContent?n.leftContent.lineContent:n&&n.rightContent?n.rightContent.lineContent:undefined},t.prototype.trackDiffs=function(t,n){return n&&n.content?n.content:undefined},t.decorators=[{type:r.Component,args:[{selector:"td-ngx-text-diff",template:'<td-loader-spinner [active]="loading"></td-loader-spinner>\r\n<div class="td-wrapper" [ngClass]="outerContainerClass" [ngStyle]="outerContainerStyle" *ngIf="!loading">\r\n\r\n  <div [ngClass]="toolbarClass" [ngStyle]="toolbarStyle" *ngIf="showToolbar">\r\n    <div class="td-toolbar-show-diff">\r\n      <label class="td-checkbox-container"\r\n        >Show Lines with Diffs ({{ diffsCount }})\r\n        <input type="checkbox" id="showDiffs" [ngModel]="hideMatchingLines" (ngModelChange)="hideMatchingLinesChanged($event)" />\r\n        <span class="checkmark"></span>\r\n      </label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="td-toolbar-select-format" *ngIf="showToolbar && showBtnToolbar">\r\n    <div class="td-btn-group td-btn-group-toggle" data-toggle="buttons">\r\n      <button\r\n        *ngFor="let option of formatOptions"\r\n        [ngClass]="{ active: format === option.value, disabled: !!option.disabled }"\r\n        [name]="option.name"\r\n        [id]="option.id"\r\n        [disabled]="!!option.disabled"\r\n        (click)="setDiffTableFormat(option.value)"\r\n      >\r\n        {{ option.label }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="td-table-wrapper" [ngClass]="compareRowsClass" [ngStyle]="compareRowsStyle">\r\n    <div class="td-table-container side-by-side" *ngIf="format === \'SideBySide\'">\r\n      <table class="td-table">\r\n        <tbody>\r\n          <tr *ngFor="let row of filteredTableRows; trackBy: trackTableRows">\r\n            <td\r\n              scope="row"\r\n              class="fit-column line-number-col"\r\n              [ngClass]="{ \'delete-row\': row.leftContent?.prefix === \'-\', \'empty-row\': !row.leftContent?.lineContent }"\r\n            >\r\n              {{ row.leftContent?.lineNumber !== -1 ? row.leftContent?.lineNumber : \' \' }}\r\n            </td>\r\n            <td\r\n              class="fit-column prefix-col"\r\n              [ngClass]="{ \'delete-row\': row.leftContent?.prefix === \'-\', \'empty-row\': !row.leftContent?.lineContent }"\r\n            >\r\n              <span>{{ row.leftContent?.prefix || \' \' }}</span>\r\n            </td>\r\n            <td\r\n              class="content-col"\r\n              [ngClass]="{ \'delete-row\': row.leftContent?.prefix === \'-\', \'empty-row\': !row.leftContent?.lineContent }"\r\n              *ngIf="!row.hasDiffs"\r\n            >\r\n              <span [innerHTML]="row.leftContent?.lineContent | formatLine"></span>\r\n            </td>\r\n            <td\r\n              class="content-col"\r\n              [ngClass]="{ \'delete-row\': row.leftContent?.prefix === \'-\', \'empty-row\': !row.leftContent?.lineContent }"\r\n              *ngIf="row.hasDiffs"\r\n            >\r\n              <span\r\n                [innerHTML]="diff.content | formatLine"\r\n                [ngClass]="{ highlight: diff.isDiff }"\r\n                *ngFor="let diff of row.leftContent?.lineDiffs; trackBy: trackDiffs"\r\n              ></span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div class="td-table-container side-by-side" *ngIf="format === \'SideBySide\'">\r\n      <table class="td-table">\r\n        <tbody>\r\n          <tr *ngFor="let row of filteredTableRows; trackBy: trackTableRows">\r\n            <td\r\n              scope="row"\r\n              class="fit-column line-number-col"\r\n              [ngClass]="{ \'insert-row\': row.rightContent?.prefix === \'+\', \'empty-row\': !row.rightContent?.lineContent }"\r\n            >\r\n              {{ row.rightContent?.lineNumber !== -1 ? row.rightContent?.lineNumber : \' \' }}\r\n            </td>\r\n            <td\r\n              class="fit-column prefix-col"\r\n              [ngClass]="{ \'insert-row\': row.rightContent?.prefix === \'+\', \'empty-row\': !row.rightContent?.lineContent }"\r\n            >\r\n              <span>{{ row.rightContent?.prefix || \' \' }}</span>\r\n            </td>\r\n            <td\r\n              class="content-col"\r\n              [ngClass]="{ \'insert-row\': row.rightContent?.prefix === \'+\', \'empty-row\': !row.rightContent?.lineContent }"\r\n              *ngIf="!row.hasDiffs"\r\n            >\r\n              <span [innerHTML]="row.rightContent?.lineContent | formatLine"></span>\r\n            </td>\r\n            <td\r\n              class="content-col"\r\n              [ngClass]="{ \'insert-row\': row.rightContent?.prefix === \'+\', \'empty-row\': !row.rightContent?.lineContent }"\r\n              *ngIf="row.hasDiffs"\r\n            >\r\n              <span\r\n                [innerHTML]="diff.content | formatLine"\r\n                [ngClass]="{ highlight: diff.isDiff }"\r\n                *ngFor="let diff of row.rightContent?.lineDiffs; trackBy: trackDiffs"\r\n              ></span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div class="td-table-container line-by-line" *ngIf="format === \'LineByLine\'">\r\n      <table class="td-table">\r\n        <tbody>\r\n          <tr *ngFor="let row of filteredTableRowsLineByLine; trackBy: trackTableRows">\r\n            <td scope="row" class="fit-column line-number-col-left">{{ row.leftContent?.lineNumber }}</td>\r\n            <td scope="row" class="fit-column line-number-col">{{ row.rightContent?.lineNumber }}</td>\r\n            <td\r\n              class="fit-column prefix-col"\r\n              [ngClass]="{ \'delete-row\': row.leftContent?.prefix === \'-\', \'insert-row\': row.rightContent?.prefix === \'+\' }"\r\n            >\r\n              <span>{{ row.leftContent?.prefix || row.rightContent?.prefix || \' \' }}</span>\r\n            </td>\r\n            <td\r\n              class="content-col"\r\n              [ngClass]="{ \'delete-row\': row.leftContent?.prefix === \'-\', \'insert-row\': row.rightContent?.prefix === \'+\' }"\r\n              *ngIf="!row.hasDiffs"\r\n            >\r\n              <span [innerHTML]="row.leftContent?.lineContent | formatLine"></span>\r\n            </td>\r\n            <td\r\n              class="content-col"\r\n              [ngClass]="{ \'delete-row\': row.leftContent?.prefix === \'-\', \'insert-row\': row.rightContent?.prefix === \'+\' }"\r\n              *ngIf="row.hasDiffs && row.leftContent && row.leftContent?.lineDiffs.length !== 0"\r\n            >\r\n              <span\r\n                [innerHTML]="diff.content | formatLine"\r\n                [ngClass]="{ highlight: diff.isDiff }"\r\n                *ngFor="let diff of row.leftContent?.lineDiffs; trackBy: trackDiffs"\r\n              ></span>\r\n            </td>\r\n            <td\r\n              class="content-col"\r\n              [ngClass]="{ \'delete-row\': row.leftContent?.prefix === \'-\', \'insert-row\': row.rightContent?.prefix === \'+\' }"\r\n              *ngIf="row.hasDiffs && row.rightContent && row.rightContent?.lineDiffs.length !== 0"\r\n            >\r\n              <span\r\n                [innerHTML]="diff.content | formatLine"\r\n                [ngClass]="{ highlight: diff.isDiff }"\r\n                *ngFor="let diff of row.rightContent?.lineDiffs; trackBy: trackDiffs"\r\n              ></span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n',styles:[".td-wrapper{display:-ms-grid;display:grid;width:100%;grid-row-gap:10px;-ms-grid-columns:([col] 50%)[2];grid-template-columns:repeat(2,[col] 50%);-ms-grid-rows:([row] auto)[2];grid-template-rows:repeat(2,[row] auto);background-color:#fff;color:#444}.td-toolbar-show-diff{-ms-grid-column:1;grid-column:1;-ms-grid-row:1;grid-row:1}.td-toolbar-select-format{margin-left:auto;-ms-grid-column:2;grid-column:2;-ms-grid-row:1;grid-row:1}.td-table-container{-ms-grid-column:1;-ms-grid-column-span:1;grid-column:1/2;-ms-grid-row:2;grid-row:2;width:100%;max-width:100%;overflow-x:auto}.td-table-wrapper{display:flex;width:200%}.td-table{border:1px solid #a9a9a9;max-height:50vh;width:100%;max-width:100%}.fit-column{width:1px;white-space:nowrap}.line-number-col{border-right:1px solid #ddd;color:#999;text-align:right;background-color:#f7f7f7;padding-left:10px;padding-right:10px;font-size:87.5%}.line-number-col-left{color:#999;padding-left:10px;padding-right:10px;text-align:right;background-color:#f7f7f7;font-size:87.5%}.insert-row,.insert-row>.line-number-col{background-color:#dfd;border-color:#b4e2b4}.delete-row,.delete-row>.line-number-col{background-color:#fee8e9;border-color:#e9aeae}.empty-row{background-color:#f7f7f7;height:24px}.td-table td{border-top:0;padding-top:0;padding-bottom:0;white-space:nowrap;max-width:50%}pre{margin-bottom:0}td.content-col{padding:0;margin:0;line-height:24px}td.prefix-col{padding-left:10px;padding-right:10px;line-height:24px}.td-btn-group{border-radius:4px}.td-btn-group button{background-color:rgba(23,162,184,.7);border:1px solid #17a2b8;color:#fff;cursor:pointer;float:left}.td-btn-group button:not(:last-child){border-right:none}.td-btn-group button:first-child{-webkit-border-top-left-radius:4px;-webkit-border-bottom-left-radius:4px;-moz-border-radius-topleft:4px;-moz-border-radius-bottomleft:4px;border-top-left-radius:4px;border-bottom-left-radius:4px}.td-btn-group button:last-child{-webkit-border-top-right-radius:4px;-webkit-border-bottom-right-radius:4px;-moz-border-radius-topright:4px;-moz-border-radius-bottomright:4px;border-top-right-radius:4px;border-bottom-right-radius:4px}.td-btn-group:after{content:'';clear:both;display:table}.td-btn-group button.active,.td-btn-group button:hover{background-color:#17a2b8}.td-checkbox-container{display:block;position:relative;padding-left:21px;margin-bottom:0;cursor:pointer;font-size:16px;line-height:28px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.td-checkbox-container input{position:absolute;opacity:0;cursor:pointer;height:0;width:0}.checkmark{position:absolute;top:7px;left:0;height:16px;width:16px;background-color:#eee}.td-checkbox-container:hover input~.checkmark{background-color:#ccc}.td-checkbox-container input:checked~.checkmark{background-color:#17a2b8}.checkmark:after{content:\"\";position:absolute;display:none}.td-checkbox-container input:checked~.checkmark:after{display:block}.td-checkbox-container .checkmark:after{left:5px;top:3px;width:5px;height:10px;border:solid #fff;border-width:0 3px 3px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.insert-row>.highlight{background-color:#acf2bd!important}.delete-row>.highlight{background-color:#fdb8c0!important}"]}]}],t.ctorParameters=function(){return[{type:o},{type:r.ChangeDetectorRef}]},t.propDecorators={format:[{type:r.Input}],left:[{type:r.Input}],right:[{type:r.Input}],diffContent:[{type:r.Input}],loading:[{type:r.Input}],showToolbar:[{type:r.Input}],showBtnToolbar:[{type:r.Input}],hideMatchingLines:[{type:r.Input}],outerContainerClass:[{type:r.Input}],outerContainerStyle:[{type:r.Input}],toolbarClass:[{type:r.Input}],toolbarStyle:[{type:r.Input}],compareRowsClass:[{type:r.Input}],compareRowsStyle:[{type:r.Input}],compareResults:[{type:r.Output}]},t}(),a=function(){function t(){this.active=!1}return t.prototype.ngOnInit=function(){},t.decorators=[{type:r.Component,args:[{selector:"td-loader-spinner",template:'<div class="td-loading-roller" *ngIf="active">\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n</div>\r\n',styles:['.td-loading-roller{display:inline-block;position:relative;width:64px;height:64px}.td-loading-roller div{-webkit-animation:1.2s cubic-bezier(.5,0,.5,1) infinite lds-roller;animation:1.2s cubic-bezier(.5,0,.5,1) infinite lds-roller;-webkit-transform-origin:32px 32px;transform-origin:32px 32px}.td-loading-roller div:after{content:" ";display:block;position:absolute;width:6px;height:6px;border-radius:50%;background:#000;margin:-3px 0 0 -3px}.td-loading-roller div:nth-child(1){-webkit-animation-delay:-36ms;animation-delay:-36ms}.td-loading-roller div:nth-child(1):after{top:50px;left:50px}.td-loading-roller div:nth-child(2){-webkit-animation-delay:-72ms;animation-delay:-72ms}.td-loading-roller div:nth-child(2):after{top:54px;left:45px}.td-loading-roller div:nth-child(3){-webkit-animation-delay:-108ms;animation-delay:-108ms}.td-loading-roller div:nth-child(3):after{top:57px;left:39px}.td-loading-roller div:nth-child(4){-webkit-animation-delay:-144ms;animation-delay:-144ms}.td-loading-roller div:nth-child(4):after{top:58px;left:32px}.td-loading-roller div:nth-child(5){-webkit-animation-delay:-.18s;animation-delay:-.18s}.td-loading-roller div:nth-child(5):after{top:57px;left:25px}.td-loading-roller div:nth-child(6){-webkit-animation-delay:-216ms;animation-delay:-216ms}.td-loading-roller div:nth-child(6):after{top:54px;left:19px}.td-loading-roller div:nth-child(7){-webkit-animation-delay:-252ms;animation-delay:-252ms}.td-loading-roller div:nth-child(7):after{top:50px;left:14px}.td-loading-roller div:nth-child(8){-webkit-animation-delay:-288ms;animation-delay:-288ms}.td-loading-roller div:nth-child(8):after{top:45px;left:10px}@-webkit-keyframes lds-roller{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes lds-roller{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}']}]}],t.ctorParameters=function(){return[]},t.propDecorators={active:[{type:r.Input}]},t}(),s=function(){function t(){}return t.prototype.transform=function(t,n){return t?(n&&n.length,t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/ /g,"&nbsp;")):" "},t.decorators=[{type:r.Pipe,args:[{name:"formatLine"}]}],t}(),f=function(){function t(){}return t.decorators=[{type:r.NgModule,args:[{imports:[n.CommonModule,e.FormsModule],declarations:[l,a,s],exports:[l]}]}],t}();t.NgxTextDiffService=o,t.NgxTextDiffComponent=l,t.NgxTextDiffModule=f,t.ɵb=s,t.ɵa=a,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-text-diff.umd.min.js.map