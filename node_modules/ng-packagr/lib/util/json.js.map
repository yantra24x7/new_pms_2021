{"version":3,"file":"json.js","sourceRoot":"","sources":["../../../src/lib/util/json.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uCAA+C;AAC/C,+BAA8B;AAC9B,iCAAmC;AAEnC;;;;;;GAMG;AACH,yBAAsC,WAA8B,EAAE,QAA+B;;QACnG,WAAK,CAAC,iBAAiB,CAAC,CAAC;QACzB,MAAM,SAAS,GAAa,MAAM,gBAAS,CAAC,WAAW,CAAC,CAAC;QAEzD,MAAM,OAAO,CAAC,GAAG,CACf,SAAS,CAAC,GAAG,CAAC,CAAO,QAAgB,EAAiB,EAAE;YACtD,MAAM,WAAW,GAAQ,MAAM,WAAW,CAAC,QAAQ,CAAC,CAAC;YACrD,MAAM,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;YACvC,MAAM,oBAAS,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;QACrD,CAAC,CAAA,CAAC,CACH,CAAC;IACJ,CAAC;CAAA;AAXD,0CAWC;AAED;;;;GAIG;AACH,qBAAkC,QAAgB;;QAChD,IAAI,CAAC;YACH,MAAM,CAAC,mBAAQ,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,2DAA2D;YAC3D,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;CAAA;AAPD,kCAOC","sourcesContent":["import { readJson, writeJson } from 'fs-extra';\nimport { debug } from './log';\nimport { globFiles } from './glob';\n\n/**\n * Modifies a set of JSON files by invoking `modifyFn`\n *\n * @param globPattern A glob pattern matching several files. Example: '**\\/*.js.map'\n * @param modifyFn A callback function that takes a JSON-parsed input and should return an output\n *                  that will be JSON-stringified\n */\nexport async function modifyJsonFiles(globPattern: string | string[], modifyFn: (jsonObj: any) => any): Promise<void> {\n  debug('modifyJsonFiles');\n  const fileNames: string[] = await globFiles(globPattern);\n\n  await Promise.all(\n    fileNames.map(async (fileName: string): Promise<void> => {\n      const fileContent: any = await tryReadJson(fileName);\n      const modified = modifyFn(fileContent);\n      await writeJson(fileName, modified, { spaces: 2 });\n    })\n  );\n}\n\n/**\n * Read json and don't throw if json parsing fails.\n *\n * @param filePath Path to the file which is parsed.\n */\nexport async function tryReadJson(filePath: string): Promise<any> {\n  try {\n    return readJson(filePath);\n  } catch (e) {\n    // this means the file was empty or not json, which is fine\n    return Promise.resolve({});\n  }\n}\n"]}