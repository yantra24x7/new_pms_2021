{"version":3,"file":"copy.js","sourceRoot":"","sources":["../../../src/lib/util/copy.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAAyC;AACzC,2CAAwC;AACxC,+BAA8B;AAC9B,mCAAkC;AAElC,mBAAgC,GAAsB,EAAE,IAAY,EAAE,OAAsB;;QAC1F,MAAM,QAAQ,GAAG,eAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACtC,WAAK,CAAC,kBAAkB,GAAG,OAAO,IAAI,EAAE,CAAC,CAAC;YAC1C,MAAM,CAAC,qBAAS,CAAO,eAAe,CAAC,EAAE;gBACvC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACZ,UAAI,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;gBAC5C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,UAAI,CAAC,GAAG,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;gBACnC,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC/B,CAAC;CAAA;AAbD,8BAaC","sourcesContent":["import { copy, AsyncOptions } from 'cpx';\nimport { promisify } from './promisify';\nimport { debug } from './log';\nimport { toArray } from './array';\n\nexport async function copyFiles(src: string | string[], dest: string, options?: AsyncOptions): Promise<void[]> {\n  const promises = toArray(src).map(src => {\n    debug(`copyFiles from ${src} to ${dest}`);\n    return promisify<void>(resolveOrReject => {\n      if (options) {\n        copy(src, dest, options, resolveOrReject);\n      } else {\n        copy(src, dest, resolveOrReject);\n      }\n    });\n  });\n\n  return Promise.all(promises);\n}\n"]}