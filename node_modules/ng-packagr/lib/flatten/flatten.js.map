{"version":3,"file":"flatten.js","sourceRoot":"","sources":["../../../src/lib/flatten/flatten.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qCAA4C;AAC5C,qCAAwC;AACxC,uEAAmE;AA2BnE,uBAAoC,IAAiB;;QACnD,MAAM,CAAC,yBAAgB,CAAC;YACtB,UAAU,EAAE,IAAI,CAAC,WAAW;YAC5B,KAAK,EAAE,IAAI,CAAC,SAAS;YACrB,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,IAAI,CAAC,QAAQ;YACnB,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;IACL,CAAC;CAAA;AARD,sCAQC;AAED,sBAAmC,IAAiB;;QAClD,MAAM,CAAC,yBAAgB,CAAC;YACtB,SAAS,EAAE,4CAAoB;YAC/B,UAAU,EAAE,IAAI,CAAC,WAAW;YAC5B,KAAK,EAAE,IAAI,CAAC,SAAS;YACrB,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,QAAQ;YACnB,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE;YACvB,YAAY,oBACP,IAAI,CAAC,YAAY,CACrB;YACD,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;IACL,CAAC;CAAA;AAbD,oCAaC;AAED,yBAAsC,SAAiB,EAAE,UAAkB;;QACzE,MAAM,CAAC,qBAAY,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IAC7C,CAAC;CAAA;AAFD,0CAEC","sourcesContent":["import { rollupBundleFile } from './rollup';\nimport { minifyJsFile } from './uglify';\nimport { downlevelCodeWithTsc } from '../ts/downlevel-transformer';\nimport { DependencyList } from './external-module-id-strategy';\n\nexport interface FlattenOpts {\n  entryFile: string;\n  destFile: string;\n  flatModuleFile: string;\n\n  /** ECMAScript module ID defined by the FESM bundles. */\n  esmModuleId: string;\n\n  /** UMD ID defined by the UMD bundle. */\n  umdModuleId: string;\n\n  /** AMD ID defined in the UMD bundle. */\n  amdId?: string;\n\n  /** Map of external UMD module IDs (dependencies).  */\n  umdModuleIds?: { [key: string]: string };\n\n  /** A list of external dependencies that will not be embedded in the bundle. */\n  externals?: string[] | RegExp;\n\n  /** List of dependency which are found in package.json */\n  dependencyList: DependencyList;\n}\n\nexport async function flattenToFesm(opts: FlattenOpts): Promise<void> {\n  return rollupBundleFile({\n    moduleName: opts.esmModuleId,\n    entry: opts.entryFile,\n    format: 'es',\n    dest: opts.destFile,\n    dependencyList: opts.dependencyList\n  });\n}\n\nexport async function flattenToUmd(opts: FlattenOpts): Promise<void> {\n  return rollupBundleFile({\n    transform: downlevelCodeWithTsc,\n    moduleName: opts.umdModuleId,\n    entry: opts.entryFile,\n    format: 'umd',\n    dest: opts.destFile,\n    amd: { id: opts.amdId },\n    umdModuleIds: {\n      ...opts.umdModuleIds\n    },\n    dependencyList: opts.dependencyList\n  });\n}\n\nexport async function flattenToUmdMin(entryFile: string, outputFile: string): Promise<string> {\n  return minifyJsFile(entryFile, outputFile);\n}\n"]}