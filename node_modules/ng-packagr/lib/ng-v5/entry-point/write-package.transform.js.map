{"version":3,"file":"write-package.transform.js","sourceRoot":"","sources":["../../../../src/lib/ng-v5/entry-point/write-package.transform.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs-extra';\nimport * as path from 'path';\nimport { Transform, transformFromPromise } from '../../brocc/transform';\nimport { NgEntryPoint } from '../../ng-package-format/entry-point';\nimport { NgPackage } from '../../ng-package-format/package';\nimport { ensureUnixPath } from '../../util/path';\nimport { rimraf } from '../../util/rimraf';\nimport * as log from '../../util/log';\nimport { isEntryPointInProgress, EntryPointNode, isEntryPointDirty } from '../nodes';\nimport { copyFiles } from '../../util/copy';\n\nexport const writePackageTransform: Transform = transformFromPromise(async graph => {\n  const entryPoint = graph.find(isEntryPointInProgress()) as EntryPointNode;\n  const ngEntryPoint: NgEntryPoint = entryPoint.data.entryPoint;\n  const ngPackage: NgPackage = graph.find(node => node.type === 'application/ng-package').data;\n  const { destinationFiles } = entryPoint.data;\n\n  // 5. COPY SOURCE FILES TO DESTINATION\n  log.info('Copying declaration files');\n  await copyFiles(`${path.dirname(ngEntryPoint.entryFilePath)}/**/*.d.ts`, path.dirname(destinationFiles.declarations));\n\n  // 6. WRITE PACKAGE.JSON\n  log.info('Writing package metadata');\n  const relativeUnixFromDestPath = (filePath: string) =>\n    ensureUnixPath(path.relative(ngEntryPoint.destinationPath, filePath));\n\n  await writePackageJson(ngEntryPoint, ngPackage, {\n    main: relativeUnixFromDestPath(destinationFiles.umd),\n    module: relativeUnixFromDestPath(destinationFiles.fesm5),\n    es2015: relativeUnixFromDestPath(destinationFiles.fesm2015),\n    esm5: relativeUnixFromDestPath(destinationFiles.esm5),\n    esm2015: relativeUnixFromDestPath(destinationFiles.esm2015),\n    fesm5: relativeUnixFromDestPath(destinationFiles.fesm5),\n    fesm2015: relativeUnixFromDestPath(destinationFiles.fesm2015),\n    typings: relativeUnixFromDestPath(destinationFiles.declarations),\n    // XX 'metadata' property in 'package.json' is non-standard. Keep it anyway?\n    metadata: relativeUnixFromDestPath(destinationFiles.metadata)\n  });\n\n  log.success(`Built ${ngEntryPoint.moduleId}`);\n\n  return graph;\n});\n\n/**\n * Creates and writes a `package.json` file of the entry point used by the `node_module`\n * resolution strategies.\n *\n * #### Example\n *\n * A consumer of the enty point depends on it by `import {..} from '@my/module/id';`.\n * The module id `@my/module/id` will be resolved to the `package.json` file that is written by\n * this build step.\n * The proprties `main`, `module`, `typings` (and so on) in the `package.json` point to the\n * flattened JavaScript bundles, type definitions, (...).\n *\n * @param entryPoint An entry point of an Angular package / library\n * @param binaries Binary artefacts (bundle files) to merge into `package.json`\n */\nexport async function writePackageJson(\n  entryPoint: NgEntryPoint,\n  pkg: NgPackage,\n  binaries: { [key: string]: string }\n): Promise<void> {\n  log.debug('Writing package.json');\n  const packageJson: any = entryPoint.packageJson;\n  // set additional properties\n  for (const fieldName in binaries) {\n    packageJson[fieldName] = binaries[fieldName];\n  }\n\n  // read tslib version from `@angular/compiler` so that our tslib\n  // version at least matches that of angular if we use require('tslib').version\n  // it will get what installed and not the minimum version nor if it is a `~` or `^`\n  if (!(packageJson.dependencies && packageJson.dependencies.tslib)) {\n    const { dependencies: angularDependencies = {} } = require('@angular/compiler/package.json');\n    const tsLibVersion = angularDependencies.tslib;\n\n    if (tsLibVersion) {\n      packageJson.dependencies = {\n        ...packageJson.dependencies,\n        tslib: tsLibVersion\n      };\n    }\n  }\n\n  // Verify non-peerDependencies as they can easily lead to duplicated installs or version conflicts\n  // in the node_modules folder of an application\n  const whitelist = pkg.whitelistedNonPeerDependencies.map(value => new RegExp(value));\n  try {\n    checkNonPeerDependencies(packageJson, 'dependencies', whitelist);\n  } catch (e) {\n    await rimraf(entryPoint.destinationPath);\n    throw e;\n  }\n\n  // Removes scripts from package.json after build\n  if (pkg.keepLifecycleScripts !== true) {\n    log.info(`Removing scripts section in package.json as it's considered a potential security vulnerability.`);\n    delete packageJson.scripts;\n  } else {\n    log.warn(\n      `You enabled keepLifecycleScripts explicitly. The scripts section in package.json will be published to npm.`\n    );\n  }\n\n  // keep the dist package.json clean\n  // this will not throw if ngPackage field does not exist\n  delete packageJson.ngPackage;\n  packageJson.name = entryPoint.moduleId;\n\n  // `outputJson()` creates intermediate directories, if they do not exist\n  // -- https://github.com/jprichardson/node-fs-extra/blob/master/docs/outputJson.md\n  await fs.outputJson(path.join(entryPoint.destinationPath, 'package.json'), packageJson, { spaces: 2 });\n}\n\nfunction checkNonPeerDependencies(packageJson: { [key: string]: any }, property: string, whitelist: RegExp[]) {\n  if (packageJson[property]) {\n    Object.keys(packageJson[property]).forEach(dep => {\n      if (whitelist.find(regex => regex.test(dep))) {\n        log.debug(`Dependency ${dep} is whitelisted in '${property}'`);\n      } else {\n        log.warn(\n          `Distributing npm packages with '${property}' is not recommended. Please consider adding ${dep} to 'peerDependencies' or remove it from '${property}'.`\n        );\n        throw new Error(`Dependency ${dep} must be explicitly whitelisted.`);\n      }\n    });\n  }\n}\n"]}