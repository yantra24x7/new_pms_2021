{"version":3,"file":"discover-packages.js","sourceRoot":"","sources":["../../../src/lib/ng-v5/discover-packages.ts"],"names":[],"mappings":"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","sourcesContent":["import { SchemaClassFactory } from '@ngtools/json-schema';\nimport { pathExists, readJson, lstat } from 'fs-extra';\nimport * as path from 'path';\nimport * as log from '../util/log';\nimport { ensureUnixPath } from '../util/path';\nimport { NgPackageConfig } from '../../ng-package.schema';\nimport { NgEntryPoint } from '../ng-package-format/entry-point';\nimport { NgPackage } from '../ng-package-format/package';\nimport { globFiles } from '../util/glob';\n\nconst ngPackageSchemaJson = require('../../ng-package.schema.json');\n\n/** Creates a SchemaClass for `NgPackageConfig` */\nconst NgPackageSchemaClass = SchemaClassFactory<NgPackageConfig>(ngPackageSchemaJson);\n\n/** Instantiates a concrete schema from `NgPackageConfig` */\nconst instantiateSchemaClass = (ngPackageJson: NgPackageConfig) => new NgPackageSchemaClass(ngPackageJson);\n\nconst fileExists = async (pathLike: string): Promise<boolean> =>\n  (await pathExists(pathLike)) && (await lstat(pathLike)).isFile();\n\ninterface UserPackage {\n  packageJson: object;\n  ngPackageJson: object;\n  basePath: string;\n}\n\n/**\n * Resolves a user's package by testing for 'package.json', 'ng-package.json', or 'ng-package.js'.\n *\n * @param folderPathOrFilePath A path pointing either to a file or a directory\n * @return The user's package\n */\nconst resolveUserPackage = async (folderPathOrFilePath: string): Promise<UserPackage | undefined> => {\n  const pathStats = await lstat(folderPathOrFilePath);\n  const fullPath = path.isAbsolute(folderPathOrFilePath) ? folderPathOrFilePath : path.resolve(folderPathOrFilePath);\n  const basePath = pathStats.isDirectory() ? fullPath : path.dirname(fullPath);\n\n  const packageJson = await readJson(path.join(basePath, 'package.json'));\n  const ngPackageJsonPath = path.join(basePath, 'ng-package.json');\n  const ngPackageJsPath = path.join(basePath, 'ng-package.js');\n\n  let ngPackageJson: undefined | object;\n\n  if (packageJson['ngPackage']) {\n    // Read `ngPackage` from `package.json`\n    ngPackageJson = { ...packageJson['ngPackage'] };\n  } else if (await fileExists(ngPackageJsonPath)) {\n    // Read 'ng-package.json' file\n    ngPackageJson = await readJson(ngPackageJsonPath);\n  } else if (await fileExists(ngPackageJsPath)) {\n    // Dynamic `require('<path>') the given file\n    ngPackageJson = await import(ngPackageJsPath);\n  }\n\n  if (ngPackageJson) {\n    return {\n      basePath,\n      packageJson,\n      ngPackageJson\n    } as UserPackage;\n  }\n\n  if (pathStats.isDirectory()) {\n    // return even if it's undefined and use defaults when it's not a file\n    return undefined;\n  }\n\n  if (pathStats.isFile()) {\n    // a project file was specified but was in valid\n    if (path.basename(folderPathOrFilePath) === 'package.json') {\n      throw new Error(`Cannot read a package from 'package.json' without 'ngPackage' property.`);\n    }\n\n    throw new Error(`Trying to read a package from unsupported file extension. Path=${folderPathOrFilePath}`);\n  }\n\n  throw new Error(`Cannot discover package sources at ${folderPathOrFilePath}`);\n};\n\n/** Reads a primary entry point from it's package file. */\nconst primaryEntryPoint = ({ packageJson, ngPackageJson, basePath }: UserPackage): NgEntryPoint =>\n  new NgEntryPoint(packageJson, ngPackageJson, instantiateSchemaClass(ngPackageJson), basePath);\n\n/**\n * Scans `directoryPath` and sub-folders, looking for `package.json` files.\n * Similar to `find ${directoryPath} --name package.json --exec dirname {}`.\n *\n * @param directoryPath Path pointing to a directory\n * @param excludeFolder A sub-folder of `directoryPath` that is excluded from search results.\n */\nconst findSecondaryPackagesPaths = async (directoryPath: string, excludeFolder: string): Promise<string[]> => {\n  const excludedFolders = ['node_modules', 'dist', path.resolve(directoryPath, excludeFolder)];\n\n  const EXCLUDE_FOLDERS = [];\n  for (let folder of excludedFolders) {\n    EXCLUDE_FOLDERS.push(`**/${folder}/**/package.json`, `**/${folder}/**/ng-package.json`);\n  }\n  EXCLUDE_FOLDERS.push(`${directoryPath}/package.json`, `${directoryPath}/ng-package.json`);\n\n  const filePaths = await globFiles(`${directoryPath}/**/package.json`, {\n    ignore: EXCLUDE_FOLDERS,\n    cwd: directoryPath\n  });\n  return filePaths.map(path.dirname).filter((value, index, array) => array.indexOf(value) === index);\n};\n\n/**\n * Reads a secondary entry point from it's package file.\n *\n * @param primaryDirectoryPath A path pointing to the directory of the primary entry point.\n * @param primary The primary entry point.\n */\nconst secondaryEntryPoint = (\n  primaryDirectoryPath: string,\n  primary: NgEntryPoint,\n  { packageJson, ngPackageJson, basePath }: UserPackage\n): NgEntryPoint => {\n  if (path.resolve(basePath) === path.resolve(primaryDirectoryPath)) {\n    log.error(`Cannot read secondary entry point. It's already a primary entry point. path=${basePath}`);\n    throw new Error(`Secondary entry point is already a primary.`);\n  }\n\n  const relativeSourcePath = path.relative(primaryDirectoryPath, basePath);\n  const secondaryModuleId = ensureUnixPath(`${primary.moduleId}/${relativeSourcePath}`);\n\n  return new NgEntryPoint(packageJson, ngPackageJson, instantiateSchemaClass(ngPackageJson), basePath, {\n    moduleId: secondaryModuleId,\n    primaryDestinationPath: primary.destinationPath,\n    destinationPath: path.join(primary.destinationPath, relativeSourcePath)\n  });\n};\n\nexport const discoverPackages = async ({ project }: { project: string }): Promise<NgPackage> => {\n  project = path.isAbsolute(project) ? project : path.resolve(project);\n\n  const primaryPackage = await resolveUserPackage(project);\n  const primary = primaryEntryPoint(primaryPackage);\n  log.debug(`Found primary entry point: ${primary.moduleId}`);\n\n  const secondaries = await findSecondaryPackagesPaths(primaryPackage.basePath, primary.$get('dest'))\n    .then(folderPaths =>\n      Promise.all(\n        folderPaths.map(folderPath =>\n          resolveUserPackage(folderPath).catch(() => {\n            log.warn(`Cannot read secondary entry point at ${folderPath}. Skipping.`);\n\n            return null;\n          })\n        )\n      )\n    )\n    .then(secondaryPackages =>\n      secondaryPackages\n        .filter(value => !!value)\n        .map(secondaryPackage => secondaryEntryPoint(primaryPackage.basePath, primary, secondaryPackage))\n    );\n  if (secondaries.length > 0) {\n    log.debug(`Found secondary entry points: ${secondaries.map(e => e.moduleId).join(', ')}`);\n  }\n\n  return new NgPackage(primaryPackage.basePath, primary, secondaries);\n};\n"]}