{"version":3,"file":"relocate.js","sourceRoot":"","sources":["../../../src/lib/sourcemaps/relocate.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,uCAA+C;AAE/C;;;;;;;;;;GAUG;AACH,4BACE,WAA8B,EAC9B,KAA+B;;QAE/B,MAAM,CAAC,sBAAe,CAAC,WAAW,EAAE,CAAC,SAAc,EAAO,EAAE;YAC1D,SAAS,CAAC,OAAO,GAAI,SAAS,CAAC,OAAoB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC/D,MAAM,CAAC,SAAS,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;CAAA;AARD,gDAQC","sourcesContent":["import { modifyJsonFiles } from '../util/json';\n\n/**\n * Relocates pathes of the `sources` file array in `*.js.map` files.\n *\n * Simply said, because `sourcesContent` are inlined in the source maps, it's possible to pass an\n * arbitrary file name and path in the `sources` property. By setting the value to a common prefix,\n * i.e. `ng://@org/package/secondary`,\n * the source map p `.map` file's relative root file paths to the module's name.\n *\n * @param flobPattern A glob pattern matching `.js.map` files\n * @param mapFn A mapping function to relocate/modify source map paths\n */\nexport async function relocateSourceMaps(\n  globPattern: string | string[],\n  mapFn: (path: string) => string\n): Promise<void> {\n  return modifyJsonFiles(globPattern, (sourceMap: any): any => {\n    sourceMap.sources = (sourceMap.sources as string[]).map(mapFn);\n    return sourceMap;\n  });\n}\n"]}