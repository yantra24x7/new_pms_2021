{"version":3,"file":"shared.js","sourceRoot":"","sources":["../../../src/lib/sourcemaps/shared.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAG7B;;GAEG;AACH,2BAAkC,gBAAkC,EAAE,wBAAwB,GAAG,KAAK;IACpG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;SACjC,GAAG,CAAC,CAAC,GAA2B,EAAE,EAAE;QACnC,6FAA6F;QAC7F,MAAM,IAAI,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC;QACzC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC,CAAC;SACD,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC9B,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC;AAbD,8CAaC","sourcesContent":["import * as path from 'path';\nimport { DestinationFiles } from '../ng-package-format/shared';\n\n/**\n * Get an array of globs and file paths for JS or JS Map files for this entry point.\n */\nexport function getGlobForMapWork(destinationFiles: DestinationFiles, shouldAppendMapExtention = false): string[] {\n  return Object.keys(destinationFiles)\n    .map((key: keyof DestinationFiles) => {\n      // we need to modify this as we need the glob for all the files in esm5 and esm2015 directory\n      const file = destinationFiles[key];\n      if (key === 'esm5' || key === 'esm2015') {\n        return `${path.dirname(file)}/**/*.js`;\n      }\n\n      return file;\n    })\n    .filter(x => x.endsWith('.js'))\n    .map(x => (shouldAppendMapExtention ? `${x}.map` : x));\n}\n"]}