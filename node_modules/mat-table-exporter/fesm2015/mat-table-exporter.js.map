{"version":3,"file":"mat-table-exporter.js.map","sources":["ng://mat-table-exporter/lib/mat-table-exporter.directive.ts","ng://mat-table-exporter/lib/mat-table-exporter.module.ts"],"sourcesContent":["import { AfterViewInit, Directive, Host, Renderer2, Self, Optional, ViewContainerRef } from '@angular/core';\nimport { MatPaginator, MatTableDataSource, MatTable } from '@angular/material';\nimport { CdkTableExporter, DataExtractorService, ServiceLocatorService } from 'cdk-table-exporter';\nimport { Observable } from 'rxjs';\n@Directive({\n  selector: '[ngxMatTableExporter], [matTableExporter]', // renamed selector but kept old version for backwards compat.\n  exportAs: 'matTableExporter'\n})\nexport class MatTableExporterDirective extends CdkTableExporter implements AfterViewInit {\n  /**\n   * Overriding ngAfterViewInit of TableExporter\n   */\n  ngAfterViewInit(): void {\n    this.exportStarted.subscribe(_ => {\n      this.enablePaginator(false);\n    });\n    this.exportCompleted.subscribe(_ => {\n      this.enablePaginator(true);\n    });\n  }\n\n  constructor(renderer: Renderer2,\n              serviceLocator: ServiceLocatorService,\n              dataExtractor: DataExtractorService,\n              @Host() @Self() @Optional() table: MatTable<any>,\n              viewContainerRef: ViewContainerRef) {\n              super(renderer, serviceLocator, dataExtractor, table, viewContainerRef);\n  }\n\n  /**\n   * MatTable implementation of getPageCount\n   * @override\n   */\n  public getPageCount(): number {\n    return this.getPaginator().getNumberOfPages();\n  }\n\n  /**\n   * MatTable implementation of getCurrentPageIndex\n   * @override\n   */\n  public getCurrentPageIndex(): number {\n    return this.getPaginator().pageIndex;\n  }\n\n  /**\n   * MatTable implementation of goToPage\n   * @override\n   */\n  public goToPage(index: number): void {\n    this.getPaginator().pageIndex = index;\n    this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n  }\n\n  /**\n   * MatTable implementation of getPageChangeObservable\n   * @override\n   */\n  public getPageChangeObservable(): Observable<any> {\n    return this.getPaginator().page;\n  }\n\n\n  private getPaginator(): MatPaginator {\n    return (this.cdkTable.dataSource as MatTableDataSource<any>).paginator;\n  }\n\n  private enablePaginator(value: boolean) {\n    if (this.getPaginator()) {\n      this.getPaginator().disabled = !value;\n      this.getPaginator()._changePageSize(this.getPaginator().pageSize);\n    }\n  }\n\n}\n","import { CdkTableExporterModule } from 'cdk-table-exporter';\nimport { MatTableModule } from '@angular/material';\nimport { NgModule } from '@angular/core';\nimport { MatTableExporterDirective } from './mat-table-exporter.directive';\n\n\n@NgModule({\n  declarations: [MatTableExporterDirective],\n  imports: [\n    MatTableModule,\n    CdkTableExporterModule\n  ],\n  exports: [MatTableExporterDirective]\n})\nexport class MatTableExporterModule { }\n"],"names":[],"mappings":";;;;;;;;;AAAA,MAQa,yBAA0B,SAAQ,gBAAgB;;;;;;;;IAa7D,YAAY,QAAmB,EACnB,cAAqC,EACrC,aAAmC,EACP,KAAoB,EAChD,gBAAkC;QAClC,KAAK,CAAC,QAAQ,EAAE,cAAc,EAAE,aAAa,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAC;KACnF;;;;;IAfD,eAAe;QACb,IAAI,CAAC,aAAa,CAAC,SAAS;;;;QAAC,CAAC;YAC5B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B,EAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,SAAS;;;;QAAC,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC5B,EAAC,CAAC;KACJ;;;;;;IAcM,YAAY;QACjB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,gBAAgB,EAAE,CAAC;KAC/C;;;;;;IAMM,mBAAmB;QACxB,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;KACtC;;;;;;;IAMM,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;KACnE;;;;;;IAMM,uBAAuB;QAC5B,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC;KACjC;;;;;IAGO,YAAY;QAClB,OAAO,oBAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,IAA6B,SAAS,CAAC;KACxE;;;;;;IAEO,eAAe,CAAC,KAAc;QACpC,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;YACvB,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC;YACtC,IAAI,CAAC,YAAY,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;SACnE;KACF;;;YApEF,SAAS,SAAC;gBACT,QAAQ,EAAE,2CAA2C;;gBACrD,QAAQ,EAAE,kBAAkB;aAC7B;;;;YAPwC,SAAS;YAED,qBAAqB;YAA3C,oBAAoB;YADJ,QAAQ,uBAuBpC,IAAI,YAAI,IAAI,YAAI,QAAQ;YAxB6B,gBAAgB;;;;;;;ACApF,MAca,sBAAsB;;;YARlC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,yBAAyB,CAAC;gBACzC,OAAO,EAAE;oBACP,cAAc;oBACd,sBAAsB;iBACvB;gBACD,OAAO,EAAE,CAAC,yBAAyB,CAAC;aACrC;;;;;;;;;;;;;;;"}
